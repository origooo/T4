        -:    0:Source:unitmain.c
        -:    0:Graph:testsuite.gcno
        -:    0:Data:testsuite.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <CUnit/Basic.h>
        -:    2:
        -:    3:#include "test_calc_h.c"
        -:    4:
function main called 1 returned 100% blocks executed 78%
        1:    5:int main(void) {
        1:    6:  CU_pSuite pSuite1 = NULL;
        -:    7:  
        -:    8:  /* Initialize CUnit test registry */
        1:    9:  if(CUE_SUCCESS != CU_initialize_registry())
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   10:    return CU_get_error();
call    0 never executed
        -:   11:
        -:   12:  /* add suite to the registry */
        1:   13:  pSuite1 = CU_add_suite("Suite 1", init_suite, clean_suite);
call    0 returned 100%
        1:   14:  if(NULL == pSuite1) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   15:    CU_cleanup_registry();
call    0 never executed
    #####:   16:    return CU_get_error();
call    0 never executed
        -:   17:  }
        -:   18:
        -:   19:  /* add tests to suite */
        1:   20:  if(NULL == CU_add_test(pSuite1, "Test Equation Chain", testEquation) || NULL == CU_add_test(pSuite1, "Test negatives", testNegatives)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
        1:   21:    || NULL == CU_add_test(pSuite1, "Test Unsigned Int Limits ", testUnsignedIntLimits) 
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   22:    || NULL == CU_add_test(pSuite1, "Test Signed Int Limits ", testSignedIntLimits) 
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   23:    || NULL == CU_add_test(pSuite1, "Test Addition ", testPlus )
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   24:    || NULL == CU_add_test(pSuite1, "Test Subtraction ", testMin)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   25:    || NULL == CU_add_test(pSuite1, "Test Multiplication ", testMul)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   26:    || NULL == CU_add_test(pSuite1, "Test Division ", testDiv)
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
        1:   27:    || NULL == CU_add_test(pSuite1, "Test Max Buffer ", testMaxBuffer)
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
        -:   28:
        -:   29:     // || NULL == CU_add_test(pSuite1, ...[next test case]...)
        -:   30:     ) {
    #####:   31:    CU_cleanup_registry();
call    0 never executed
    #####:   32:    return CU_get_error();
call    0 never executed
        -:   33:  }
        -:   34:
        -:   35:  /* Run all tests using console interface */
        1:   36:  CU_basic_set_mode(CU_BRM_VERBOSE);
call    0 returned 100%
        1:   37:  CU_basic_run_tests();
call    0 returned 100%
        1:   38:  CU_cleanup_registry();
call    0 returned 100%
        1:   39:  return CU_get_error();
call    0 returned 100%
        -:   40:}
